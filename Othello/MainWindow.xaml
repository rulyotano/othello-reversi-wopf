<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:UniformBoard="clr-namespace:Othello.UniformBoard" xmlns:ViewModel="clr-namespace:Othello.ViewModel" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:Custom="http://www.galasoft.ch/mvvmlight" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:View="clr-namespace:Othello.View" xmlns:Converters="clr-namespace:Othello.View.Converters" mc:Ignorable="d" 
        x:Class="Othello.MainWindow"
        Title="Othello" Height="441" Width="753"
        WindowState="Maximized">
    <Window.Resources>
        <Converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="UniformBoard:UniformBoard.Row" Value="{Binding X}"/>
            <Setter Property="UniformBoard:UniformBoard.Column" Value="{Binding Y}"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate DataType="{x:Type ViewModel:CellViewModel}">
            <View:TileControl DataContext="{Binding}"/>
<!--            <Grid x:Name="grid" Background="{StaticResource CellBackGroundBrush}">-->
<!--                <VisualStateManager.VisualStateGroups>-->
<!--                    <VisualStateGroup x:Name="CellStates">-->
<!--                        <VisualState x:Name="Empty"/>-->
<!--                        <VisualState x:Name="White">-->
<!--                            <Storyboard>-->
<!--                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">-->
<!--                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>-->
<!--                                </DoubleAnimationUsingKeyFrames>-->
<!--                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ellipse">-->
<!--                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>-->
<!--                                </ObjectAnimationUsingKeyFrames>-->
<!--                            </Storyboard>-->
<!--                        </VisualState>-->
<!--                        <VisualState x:Name="Black">-->
<!--                            <Storyboard>-->
<!--                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ellipse">-->
<!--                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>-->
<!--                                </ObjectAnimationUsingKeyFrames>-->
<!--                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">-->
<!--                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>-->
<!--                                </DoubleAnimationUsingKeyFrames>-->
<!--                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="ellipse">-->
<!--                                    <EasingColorKeyFrame KeyTime="0" Value="#FF010101"/>-->
<!--                                </ColorAnimationUsingKeyFrames>-->
<!--                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="ellipse">-->
<!--                                    <EasingColorKeyFrame KeyTime="0" Value="#FF3A3A3A"/>-->
<!--                                </ColorAnimationUsingKeyFrames>-->
<!--                            </Storyboard>-->
<!--                        </VisualState>-->
<!--                    </VisualStateGroup>-->
<!--                </VisualStateManager.VisualStateGroups>-->
<!--                ~1~            	<i:Interaction.Triggers>@1@-->
<!--                ~1~            		<ei:DataTrigger Binding="{Binding CellStateString, Mode=OneWay}" Value="Empty">@1@-->
<!--                ~1~            			<ei:GoToStateAction StateName="Empty" UseTransitions="False"/>@1@-->
<!--                ~1~            		</ei:DataTrigger>@1@-->
<!--                ~1~            		<ei:DataTrigger Binding="{Binding CellStateString, Mode=OneWay}" Value="White">@1@-->
<!--                ~1~            			<ei:GoToStateAction StateName="White" UseTransitions="False"/>@1@-->
<!--                ~1~            		</ei:DataTrigger>@1@-->
<!--                ~1~            		<ei:DataTrigger Binding="{Binding CellStateString, Mode=OneWay}" Value="Black">@1@-->
<!--                ~1~            			<ei:GoToStateAction StateName="Black" UseTransitions="False"/>@1@-->
<!--                ~1~            		</ei:DataTrigger>@1@-->
<!--                <i:Interaction.Triggers>-->
<!--                    <i:EventTrigger EventName="MouseLeftButtonDown">-->
<!--                        <Custom:EventToCommand Command="{Binding Main.HummanMoveCommand, Source={StaticResource Locator}}" CommandParameter="{Binding Mode=OneWay}"/>-->
<!--                    </i:EventTrigger>-->
<!--                </i:Interaction.Triggers>-->
<!--                ~1~            	</i:Interaction.Triggers>@1@-->
<!--                <Ellipse x:Name="ellipse" Stroke="{StaticResource TileWhiteBorder}" Margin="1" Opacity="0" Visibility="Collapsed">-->
<!--                    <Ellipse.Fill>-->
<!--                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">-->
<!--                            <GradientStop Color="#FFABA0A0" Offset="0"/>-->
<!--                            <GradientStop Color="White" Offset="1"/>-->
<!--                        </LinearGradientBrush>-->
<!--                    </Ellipse.Fill>-->
<!--                </Ellipse>-->
<!--            </Grid>-->
<!--            <DataTemplate.Triggers>-->
<!--                <DataTrigger Binding="{Binding CellState}" Value="White">-->
<!--                    <Setter TargetName="ellipse" Property="Visibility" Value="Visible"/>-->
<!--                    <Setter TargetName="ellipse" Property="Opacity" Value="1"/>-->
<!--                </DataTrigger>-->
<!--                <DataTrigger Binding="{Binding CellState}" Value="Black">-->
<!--                    <Setter TargetName="ellipse" Property="Visibility" Value="Visible"/>-->
<!--                    <Setter TargetName="ellipse" Property="Opacity" Value="1"/>-->
<!--                    <Setter TargetName="ellipse" Property="Fill" Value="{StaticResource TileBlackBackground}"/>-->
<!--                </DataTrigger>-->
<!--                <DataTrigger Binding="{Binding IsPossibleNextMove}" Value="True">-->
<!--                    <Setter TargetName="grid" Property="Background" Value="{StaticResource CellPosibleMove}"/>-->
<!--                </DataTrigger>-->
<!--            </DataTemplate.Triggers>-->
        </DataTemplate>
    </Window.Resources>
    <Window.DataContext>
        <Binding Path="Main" Source="{StaticResource Locator}"/>
    </Window.DataContext>
    <DockPanel>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="PlayTurnStates">
                <VisualState x:Name="NonePlaying"/>
                <VisualState x:Name="PlayingBlack">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipseblackturn">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipseblackturn">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="38"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="PlayingWhite">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipsewhiteturn">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipsewhiteturn">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="-38"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Exit" Command="{Binding ExitCommand}"/>
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem Content="{Binding CurrentState}"/>
        </StatusBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="331"/>
            </Grid.ColumnDefinitions>
            <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" Grid.Column="2" CornerRadius="4"/>
            <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="4"/>
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <ListBox x:Name="listBox" Width="{Binding ActualHeight, ElementName=listBox, Mode=OneWay}" ItemContainerStyle="{DynamicResource ListBoxItemStyle}" ItemsSource="{Binding Board.Cells}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="{x:Null}" d:LayoutOverrides="Height" Grid.Row="1" Grid.Column="1" Grid.RowSpan="8" Grid.ColumnSpan="8">
                    <ListBox.Style>
                        <Style TargetType="{x:Type ListBox}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBox}">
                                        <UniformBoard:UniformBoard Rows="8" Columns="8" IsItemsHost="True" Animate="False" Background="{StaticResource BoardBackGroundBrush}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Style>
                </ListBox>
                <TextBlock Grid.Column="1" Grid.Row="9" TextWrapping="Wrap" Text="a" d:LayoutOverrides="Width, Height" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="2" Grid.Row="9" TextWrapping="Wrap" Text="b" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="3" Grid.Row="9" TextWrapping="Wrap" Text="c" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="4" Grid.Row="9" TextWrapping="Wrap" Text="d" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="5" Grid.Row="9" TextWrapping="Wrap" Text="e" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="6" Grid.Row="9" TextWrapping="Wrap" Text="f" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="7" Grid.Row="9" TextWrapping="Wrap" Text="g" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="8" Grid.Row="9" TextWrapping="Wrap" Text="h" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="1" TextWrapping="Wrap" Text="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="2" TextWrapping="Wrap" Text="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="3" TextWrapping="Wrap" Text="3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="4" TextWrapping="Wrap" Text="4" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="5" TextWrapping="Wrap" Text="5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="6" TextWrapping="Wrap" Text="6" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="7" TextWrapping="Wrap" Text="7" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="8" TextWrapping="Wrap" Text="8" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="1" TextWrapping="Wrap" Text="a" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="2" TextWrapping="Wrap" Text="b" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="3" TextWrapping="Wrap" Text="c" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="4" TextWrapping="Wrap" Text="d" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="5" TextWrapping="Wrap" Text="e" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="6" TextWrapping="Wrap" Text="f" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="7" TextWrapping="Wrap" Text="g" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="8" TextWrapping="Wrap" Text="h" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="1" TextWrapping="Wrap" Text="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="11"/>
                <TextBlock Grid.Row="2" TextWrapping="Wrap" Text="2" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="11"/>
                <TextBlock Grid.Row="3" TextWrapping="Wrap" Text="3" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="11"/>
                <TextBlock Grid.Row="4" TextWrapping="Wrap" Text="4" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="11"/>
                <TextBlock Grid.Row="5" TextWrapping="Wrap" Text="5" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="11"/>
                <TextBlock Grid.Row="6" TextWrapping="Wrap" Text="6" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="11"/>
                <TextBlock Grid.Row="7" TextWrapping="Wrap" Text="7" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="11"/>
                <TextBlock Grid.Row="8" TextWrapping="Wrap" Text="8" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="11"/>
            </Grid>
            <StackPanel Grid.Column="1" Margin="9,24,136,0" Orientation="Vertical" VerticalAlignment="Top">
                <TextBlock TextWrapping="Wrap" Text="White Player: " d:LayoutOverrides="Width"/>
                <ComboBox ItemsSource="{Binding AviableWhitePlayers}" SelectedValue="{Binding SelectedWhitePlayer}" DisplayMemberPath="PlayerName" Margin="0,4,0,0" IsEnabled="{Binding IsPlaying, Converter={StaticResource InverseBooleanConverter}}"/>
                <TextBlock TextWrapping="Wrap" Text="Black Player: " d:LayoutOverrides="Width" Margin="0,8,0,0"/>
                <ComboBox ItemsSource="{Binding AviableBlackPlayers}" SelectedItem="{Binding SelectedBlackPlayer}" DisplayMemberPath="PlayerName" Margin="0,4,0,0" IsEnabled="{Binding IsPlaying, Converter={StaticResource InverseBooleanConverter}}"/>
                <Button Content="Start New Game" Command="{Binding StartPlayCommand, Mode=OneWay}" Margin="0,20,0,0" Height="45"/>
                <Button Content="End Game" Command="{Binding EndPlayCommand, Mode=OneWay}" Margin="0,4,0,0"/>
                <GroupBox Header="Statistics" d:LayoutOverrides="HorizontalAlignment" Margin="0,20,0,0">
                    <Grid Height="105">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.512*"/>
                            <RowDefinition Height="18.146"/>
                            <RowDefinition Height="17.692"/>
                            <RowDefinition Height="0.239*"/>
                            <RowDefinition Height="0.249*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="38"/>
                            <ColumnDefinition Width="38"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock TextWrapping="Wrap" Text="Count:" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBlock TextWrapping="Wrap" Text="Turn:" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding WhiteCount}" Grid.Column="1" VerticalAlignment="Center" Grid.Row="1"/>
                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding BlackCount}" VerticalAlignment="Center" Grid.Column="3" Grid.Row="1"/>
                        <Ellipse Grid.Column="1" Fill="{DynamicResource TileWhiteBackground}" Stroke="Black" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Width="23" Height="23"/>
                        <Ellipse Grid.Column="2" Fill="{DynamicResource TileBlackBackground}" Stroke="Black" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Width="23" Height="23"/>
                        <View:PlayTurnChangeControl x:Name="turnControl" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"/>
                        <TextBlock TextWrapping="Wrap" Text="Max Elapsed Time:" Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBlock TextWrapping="Wrap" Text="Elapsed Time:" Grid.Row="5" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding WhiteMaxEllapsedTime}" Grid.Column="1" VerticalAlignment="Center" Grid.Row="3"/>
                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding BlackMaxEllapsedTime}" VerticalAlignment="Center" Grid.Column="3" Grid.Row="3"/>
                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding WhiteEllapsedSeconds}" Grid.Column="1" VerticalAlignment="Center" Grid.Row="5"/>
                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding BlackEllapsedSeconds}" VerticalAlignment="Center" Grid.Column="3" Grid.Row="5"/>
                    </Grid>
                </GroupBox>
            </StackPanel>
			<GroupBox Header="Moves" Grid.Column="1" Margin="199,24,8,5" >
            	<TextBox TextWrapping="Wrap" Text="{Binding MovesString}" IsReadOnly="True" VerticalScrollBarVisibility="Auto" />
			</GroupBox>
        </Grid>
    </DockPanel>
</Window>
